#include <iostream>
#include <string>
#include <cmath>
#include <fstream> //needed for ifstream/ fin

using namespace std;

int main()

{ 
    
   // Arrays_part 2 Q3
    
    int i, j, n=3;  
    double A[4][4], temp [4][4];
    ifstream fin;
    
    // open file
    fin.open("A.txt);
    
    // Check for file open error
    if ( !fin) {
        cout<< "\nerror opening input file";
        exit(1);
    }
    // we assume that the matrix will be a 3x3, it does not matter
    // how we type it in the text file. You already defined the size
    // at the top with A[4][4]. You can write the matrix size at the top.
    
    for(i=1;i<=n;i++) {
        for(j=1;j<=n;j++) {
            fin >> A[i][j];
            cout << A[i][j] << "";
        }
        cout << "\n";
    }
    
    // close input file stream
    fin.close();
    
    // calculate the norm of the 3rd col of A and print it out
    
    //swap second and third column of A
    // key to swapping is to use a temp variable to store the values we replace
    // we can swap one row of the column at a time
    // so using a for loop for i will work for that. SAVE THIS TO TOOLBOX COde
    for(i=1;i<=n;i++) {
        temp=A[i][3]; // make a backup first
        A[i][3] = A[i][2]// copy second column into 3rd col
        A[i][2] = temp; // copy backup of 3rd col into 2nd col
    }
    
    //Arrays_part3
    //example 1
    char A[4];
    A[0] = 'a';
    A[1] = 'b';
    A[2] = 'c';
    A[3] = '\0'; // do not forget the terminaiton character
    
    cout << "\nA = " << A;
    
    //initialization during declaration e.g
    
    char B1[3] = {'1','2', '\0'};
    cout << "\nB1 = " << B1;

//example 2


#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main()

{ 
     // its always a good idea to find the length of
    // the input strings first when writing a string
    // program. The reasin is that you can then use
    // for loops to solve the problem.
    
    //new example
    int i, nA, nB;
    char A[] = "hello", B[6] = "world", C[11]; // convention is B[# of ch in strings + 1]="string";
    
    // count the number of ch in the string
    i=0
    while(1) {
        if(A[i]== '\0') break;
        i==;
    }
    nA = i;
    
    // a shorter alternative for your toolbox
    i=0
    while(B[i] != '\0) i++;
    nB = i;
b
    cout << "\nnA = " << nA;        
    cout << "\nnB = " << nB;
    
    //now join hello and world to spell helloworld
    
    for(i=0;i<nA;i++) C[i]=A[i]; // copy A into C
    
    for(i=0;i<nB;i++) C[] = B[i=nA]; // copy B onto the end of of A/C
    
    for(i=nA;i<nA+nB;i++) C[i] = B[i-nA];
    
    C[i] = '\0';
    C[nA+nB]= '\0';
    cout << "\ndone.\n";
return 0;
